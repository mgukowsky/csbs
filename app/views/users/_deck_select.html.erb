<h3>Look up anyone's public decks</h3>
<div class="deck-search-div">
<input type="text" class="deck-search-bar"><br>
<p>Type a name, then click the button that shows up to see their decks:</p>
<ul class="deck-search-results"></ul>
</div>

<script>
  $searchEl = $("div.deck-search-div");
  $input = this.$searchEl.find("input.deck-search-bar");
  $results = this.$searchEl.find("ul.deck-search-results");

  $input.on("input", window.deckSearch);

  window.deckSearch = function () {
    if ($input.val() === "") {
      $results.empty();
      return null;
    }

    searchQuery = $input.val().toLowerCase();
    searchResults = [];
    $.ajax({
      url: "/users",
      type: "GET",
      success: function (usersData) {
        usersData.forEach(function(data){
          if (data.username.toLowerCase().match(searchQuery)) {
            searchResults.push(data)
          }
        })
        this.renderResults(searchResults);
      }.bind(this)
    });
  };

  window.renderResults = function (searchResults) {
    //Limit data to avoid unmanageable huge num of results; avoid display mess
    if (searchResults.length > 30) {
      searchResults = searchResults.slice(0, 30);
    }

    $results.empty();
    searchResults.forEach(function (result) {
      $a = $("<a>");
      //**************************************************************
      //Clarify with TA why it is not necessary to do "/users/" first?
      //**************************************************************
      $a.attr("href", result.id + "/decks");
      $a.html("<button>" + result.username + "</button><br>");
      $results.append($a)
    }.bind(this));
  };

  //**************************************************************
  //Clarify with TA why this syntax (why not just 'document'), and why does it break when
  //second arg is a class? Also, how to make this cleaner (jQuery plugin, but
  //ONLY for this page to avoid collisions, or AJAX thru Backbone instead)?
  //**************************************************************

  $(document.body).on("input","input", function () {
    window.deckSearch();
  });

</script>


<h1><em>ADD SEARCH FOR SUBJECT NAME, THEN RETURN A LIST OF MATCHING SUBJECTS/TOPICS/DECKS</em></h1>
